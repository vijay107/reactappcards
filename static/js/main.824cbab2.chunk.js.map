{"version":3,"sources":["logo.svg","serviceWorker.js","Frndsdata.js","Demo1.js","Frnds.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Frndsdata","Component","props","className","src","img","name","place","Frnds","myfun","setState","msg","state","array","newarray","map","i","class","this","type","onClick","id","placeholder","row","col","value","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,0OCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sCCNSC,G,MCRKC,Y,MDAF,SAACC,GACf,OAAO,yBAAKC,UAAU,kBACZ,yBAAKC,IAAKF,EAAMG,MAChB,+CAAqBH,EAAMI,MAC3B,wCAAcJ,EAAMK,UEoDnBC,G,wDAtDX,aACC,IAAD,8BACE,gBAIDC,MAAO,WAEN,EAAKC,SAAS,CAACC,IAAI,qBALnB,EAAKC,MAAM,CAACD,IAAI,+CAFlB,E,qDAYA,IAAME,EAAM,CACN,CAACP,KAAK,gBAAiBC,MAAM,0BAC3BF,IAAI,kGAEN,CAACC,KAAK,kBAAmBC,MAAM,kBAC7BF,IAAI,+FAEN,CAACC,KAAK,mBAAoBC,MAAM,2BAC9BF,IAAI,wJAEN,CAACC,KAAK,mBAAoBC,MAAM,iBAC9BF,IAAI,+GAEN,CAACC,KAAK,kBAAmBC,MAAM,gBAC7BF,IAAI,kJAIFS,EAASD,EAAME,KAAK,SAACP,EAAOQ,GAC7B,OAAQ,kBAAC,EAAD,CAAWV,KAAMO,EAAMG,GAAGV,KAAMC,MAAOM,EAAMG,GAAGT,MAAOF,IAAKQ,EAAMG,GAAGX,SAMpF,OAAQ,yBAAKY,MAAM,cACb,qDACGH,EACH,2BAAII,KAAKN,MAAMD,KACf,4BAAQQ,KAAK,SAASC,QAASF,KAAKT,OAApC,UACE,8BACA,+CACA,8BAAUY,GAAG,UAAUC,YAAY,iBAAiBC,IAAI,IAAIC,IAAI,OAChE,4BAAQH,GAAG,UAAUF,KAAK,SAASM,MAAM,UAAzC,WAEF,kD,GAjDQxB,cCIpByB,IAASC,OAAO,6BAAK,kBAAC,EAAD,OACZC,SAASC,eAAe,SJyH3B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.824cbab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\r\nimport './Frndsdata.css';\r\n\r\n/*  class component  */\r\nconst Frndsdata = (props)=>{\r\n    return <div className=\"stylefrndsdata\">\r\n              <img src={props.img}/>\r\n              <h3>Hii there. I am {props.name}</h3>\r\n              <p>I am from {props.place}</p>\r\n            </div>\r\n\r\n      }\r\nexport default Frndsdata;\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Demo1.css';\r\n/*  class component  */\r\nclass Demo1 extends Component{\r\n  render(){\r\n    return <div className=\"style2\">\r\n              <h1>Hii there.. I am {this.props.name}</h1>\r\n              <p>I am from {this.props.place}</p>\r\n            </div>\r\n  }\r\n}\r\nexport default Demo1;\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Frndsdata from './Frndsdata';\r\nimport './Frnds.css';\r\n/*  class component  */\r\nclass Frnds extends Component{\r\n    constructor()\r\n    {\r\n      super();\r\n      this.state={msg:\"Press like :) button If you like my page...\"}\r\n    }\r\n\r\n     myfun =()=>\r\n            {\r\n      this.setState({msg:\"Thanks for like\"});\r\n    }\r\n\r\n  render(){\r\n\r\n    const array=[\r\n          {name:\"Vijay Paradhi\", place:\"New York, United states\",\r\n            img:\"http://www.cartoondistrict.com/wp-content/uploads/2014/09/most-creepy-cartoon-characters10.jpg\"\r\n          },\r\n          {name:\"Siddhesh Ramane\", place:\"London, England\",\r\n            img:\"https://3.bp.blogspot.com/-C_wBJG1Ls9g/U5u2ZJU4cTI/AAAAAAAAETo/mLtL75QOqk8/s1600/kite+8.png\"\r\n          },\r\n          {name:\"Krushna Jadhavar\", place:\"Pune, Maharashtra, India\",\r\n            img:\"https://4.bp.blogspot.com/-8w_a6E-5HGY/XRP8xXMRnrI/AAAAAAABIhI/oWY3A28CEPY9G33pk-OnMQ3cUdN5g0lDwCLcBGAs/s1600/Ninja-Hattori-Cast-Star-Character.jpeg\"\r\n          },\r\n          {name:\"Prathmesh Tembhe\", place:\"Sevilla, Spain\",\r\n            img:\"http://3.bp.blogspot.com/_lLsdaCVk3Kk/S6q-ChaI9oI/AAAAAAABiDk/tAxKsqm1uH0/s1600/4314262277_35d98f2c01_o.jpg\"\r\n          },\r\n          {name:\"Aniket Waghmare\", place:\"Paris, France\",\r\n            img:\"https://4.bp.blogspot.com/-ENR8Z2cE-yc/V7NWOooq1rI/AAAAAAAAHTY/fgweWSqsuOsLuXK8pnG2qHTXeXL8gqOkQCLcB/s1600/chhota_bheem_playing_sweetmeat.jpg\"\r\n          }\r\n        ]\r\n\r\n        const newarray=array.map( (Frnds, i) => {\r\n             return (<Frndsdata name={array[i].name} place={array[i].place} img={array[i].img}\r\n             />)\r\n          }\r\n        )\r\n\r\n\r\n      return (<div class=\"stylefrnds\">\r\n            <h1>Welcome to my Website</h1>\r\n              {newarray}\r\n            <p>{this.state.msg}</p>\r\n            <button type=\"button\" onClick={this.myfun}> Like </button>\r\n              <form>\r\n              <p>Suggestions Box:</p>\r\n              <textarea id=\"suggest\" placeholder=\"Enter here....\" row=\"5\" col=\"20\"></textarea>\r\n              <button id=\"suggest\" type=\"submit\" value=\"Submit\">Submit</button>\r\n            </form>\r\n            <h2>Visit again..</h2>\r\n          </div>)\r\n\r\n    }\r\n  }\r\n\r\nexport default Frnds;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Demo from './Demo';\nimport Demo1 from './Demo1';\nimport Frnds from './Frnds';\n\nReactDOM.render(<div><Frnds/>\n  </div>,document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}